*tempclone.txt*       Open codes on GitHub on Vim

Author : rhysd <lin90162@yahoo.co.jp>
Version : 0.1

CONTENTS                *tempclone.vim-contents*

Introduction            |tempclone.vim-introduction|
Install                 |tempclone.vim-install|
Usage                   |tempclone.vim-usage|
Variables               |tempclone.vim-variables|
License                 |tempclone.vim-license|


==============================================================================
INTRODUCTION                                        *tempclone.vim-introduction*

*tempclone.vim* is a Vim plugin to open source code in GitHub also in Vim.

e.g.
>
  :Tempclone https://github.com/rhysd/tempclone.vim/blob/master/README.md#L5
<
|tempclone.vim| clones the target repository to temporary directory and open the
code in a new buffer. When Vim closes, tempclone automatically removes the
cloned directories. So you don't need to take care about them.

I often see codes in GitHub. But GitHub is sometimes not convenient because of
lack of navigation and definition jump. But we are Vimmer. We can read codes
faster on Vim using them, powerful shortcuts to move a cusor and favorite
color scheme.

tempclone.vim clones repositories in background using job feature on Vim8+ or
Neovim. So it does not block your operations.

And this plugin is handy for your pull requests workflow.
>
  1. You find a mistake while reading a code on GitHub
  2. Copy URL of the page
  3. ":Tempclone {url}"
  4. Fix the mistake
  5. Run tests with ":!" and shell commands
  6. Send a pull request with ":!hub pull-request"
  7. Close the Vim (automatically removes temporary repository)
<
Enjoy!


==============================================================================
INSTALL                                                  *tempclone.vim-install*

Please follow the instruction in Vim's help: |add-plugin|

Or please use your favorite plugin manager like vim-plug.

vim-plug: https://github.com/junegunn/vim-plug


==============================================================================
USAGE                                                      *tempclone.vim-usage*

|:Tempclone| and |:TempcloneGC| commands are available.

*:Tempclone* provides the feature described in above introduction.
You can specify main page, directory page, specific branch page, specific
commit page, and so on. You can simply copy and paste URL in your browser.

|:Tempclone| moves buffer-local current working directory to the repository
directory. So you can use shell commands with `:!` in the repository.
>
  " URL
  :Tempclone https://github.com/rhysd/tempclone.vim
  " Assumes https://github.com
  :Tempclone rhysd/tempclone.vim
  " At line 5 of file autoload/tempclone.vim
  :Tempclone https://github.com/rhysd/tempclone.vim/blob/master/autoload/tempclone.vim#L5
  " Directory autoload/
  :Tempclone https://github.com/rhysd/tempclone.vim/tree/master/autoload
  " Branch 'develop'
  :Tempclone https://github.com/rhysd/tempclone.vim/tree/devbelop
  " Specific commit c3cb675
  :Tempclone https://github.com/rhysd/tempclone.vim/commit/c3cb675270902fb7186657844082e9def8f3881d
<
The created temporary directory will be removed at |VimLeave| event
automatically.
But if you prefer removing temporary directory explicitly, |:TempcloneGC| is
available.
*:TempcloneGC* removes a temporary directory created by `:Tempclone`. It can take
the same argument as |:Tempclone|.
>
  " Remove temporary directory for the URL
  :TempcloneGC https://github.com/rhysd/tempclone.vim
  " Remove ALL temporary directories
  :TempcloneGC
<
You can find the command ":Tempclone xxx" which you executed previously in
command line history. And add 'GC' to the command line, then you can remove
the corresponding temporary directory.


==============================================================================
VARIABLES                                              *tempclone.vim-variables*

- *g:tempclone_open_dir_cmd* (Default: "Explore")

  Vim command to open directory page in cloned repository. This is used when a
  directory page is specified.

- *g:tempclone_open_file_cmd* (Default: "edit")

  Vim command to open file page in cloned repository. This is used when a file
  page is specified.

- *g:tempclone_temp_dir* (Default: returned string from |tempname()|)

  Directory to clone temporary repositories into. When this directory does not
  exist, |tempclone.vim| creates it automatically.

- *g:tempclone_git_cmd* (Default: "git")

  Shell command to execute Git.


==============================================================================
LICENSE                                                  *tempclone.vim-license*

|tempclone.vim| is distributed under The MIT License.

  Copyright (c) 2017 rhysd

  Permission is hereby granted, free of charge, to any person obtaining
  a copy of this software and associated documentation files (the
  "Software"), to deal in the Software without restriction, including
  without limitation the rights to use, copy, modify, merge, publish,
  distribute, sublicense, and/or sell copies of the Software, and to
  permit persons to whom the Software is furnished to do so, subject to
  the following conditions:
  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


==============================================================================
vim:tw=78:ts=8:ft=help:norl:et:fen:fdl=0:
